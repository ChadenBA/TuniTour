{"ast":null,"code":"import request from '../../utils/request';\nimport { toast } from \"react-toastify\";\nimport { profileAction } from '../slices/profile.slice';\nimport { authAction } from '../slices/authslice';\n\n// get admin  profile \nexport function getAdminpofile(adminId) {\n  return async dispatch => {\n    try {\n      //axios insted of fetch \n      const {\n        data\n      } = await request.get(`api/admin/adminProfile/${adminId}`);\n      dispatch(profileAction.setProfile(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// uoload profile picture\nexport function uploadProfilePhoto(newPhoto) {\n  return async (dispatch, getState) => {\n    try {\n      //axios insted of fetch \n      const {\n        data\n      } = await request.post(`api/admin/adminProfile/profile-photo-upload`, newPhoto, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(profileAction.setProfilePicture(data.profilepicture));\n      dispatch(authAction.setAdminPicture(data.profilepicture));\n      toast.success(\"profile picture uploaded successfully\");\n      //modify the admin info in local storage with new image \n      const admin = JSON.parse(localStorage.getItem(\"adminInfo\"));\n      admin.profilepicture = data === null || data === void 0 ? void 0 : data.profilepicture;\n      localStorage.setItem(\"userInfo\", JSON.stringify(admin));\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n}\n\n// update  profile info \nexport function updateProfile(adminId, profile) {\n  console.log(adminId);\n  return async (dispatch, getState) => {\n    try {\n      //axios insted of fetch \n      const {\n        data\n      } = await request.put(`api/admin/adminProfile/${adminId}`, profile, {\n        headers: {\n          Authorization: \"Baerer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(profileAction.updateProfile(data));\n      dispatch(authAction.setAdminname(data.adminname));\n      toast.success(\"profile updated successfully\");\n      //modify the admin info in local storage  with new adminname \n      const admin = JSON.parse(localStorage.getItem(\"adminInfo\"));\n      admin.adminname = data === null || data === void 0 ? void 0 : data.adminname;\n      localStorage.setItem(\"userInfo\", JSON.stringify(admin));\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n}","map":{"version":3,"names":["request","toast","profileAction","authAction","getAdminpofile","adminId","dispatch","data","get","setProfile","error","response","message","uploadProfilePhoto","newPhoto","getState","post","headers","Authorization","auth","admin","token","setProfilePicture","profilepicture","setAdminPicture","success","JSON","parse","localStorage","getItem","setItem","stringify","updateProfile","profile","console","log","put","setAdminname","adminname"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/apiCalls/profileApiCall.js"],"sourcesContent":["\nimport request  from '../../utils/request'\nimport { toast } from \"react-toastify\"\nimport { profileAction } from '../slices/profile.slice'\nimport { authAction } from '../slices/authslice';\n\n\n// get admin  profile \nexport function getAdminpofile(adminId){\n    return async(dispatch)=>{\n        try{\n    \n     //axios insted of fetch \n        const {data}=await request.get(`api/admin/adminProfile/${adminId}`);\n        dispatch(profileAction.setProfile(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n\n\n// uoload profile picture\nexport function uploadProfilePhoto(newPhoto){\n    return async(dispatch , getState)=>{\n        try{\n     //axios insted of fetch \n        const {data}=await request\n         .post(`api/admin/adminProfile/profile-photo-upload`,newPhoto,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n                \"Content-Type\":\"multipart/form-data\"\n            } \n         });\n        \n          \n         dispatch(profileAction.setProfilePicture(data.profilepicture))\n         dispatch(authAction.setAdminPicture(data.profilepicture))\n         toast.success(\"profile picture uploaded successfully\")\n          //modify the admin info in local storage with new image \n          const admin=JSON.parse(localStorage.getItem(\"adminInfo\"))\n          admin.profilepicture=data?.profilepicture;\n          localStorage.setItem(\"userInfo\",JSON.stringify(admin));\n\n        }catch(error){\n          toast.error(error)\n      \n        }\n\n    }\n}\n\n\n// update  profile info \nexport function updateProfile(adminId, profile){ \n    console.log(adminId)\n    return async(dispatch , getState)=>{\n        try{\n     //axios insted of fetch \n        const {data}=await request\n         .put(`api/admin/adminProfile/${adminId}`, \n          profile,{\n            headers:{\n            Authorization: \"Baerer \" + getState().auth.admin.data.token,\n               \n            } \n         });\n        \n          dispatch(profileAction.updateProfile(data))\n          dispatch(authAction.setAdminname(data.adminname))\n        toast.success(\"profile updated successfully\")\n          //modify the admin info in local storage  with new adminname \n           const admin=JSON.parse(localStorage.getItem(\"adminInfo\"))\n           admin.adminname=data?.adminname;\n           localStorage.setItem(\"userInfo\",JSON.stringify(admin))\n      \n        }catch(error){\n         toast.error(error)\n      \n        }\n\n    }\n}\n\n\n\n    \n\n\n"],"mappings":"AACA,OAAOA,OAAO,MAAO,qBAAqB;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,UAAU,QAAQ,qBAAqB;;AAGhD;AACA,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAC;EACnC,OAAO,MAAMC,QAAQ,IAAG;IACpB,IAAG;MAEN;MACG,MAAM;QAACC;MAAI,CAAC,GAAC,MAAMP,OAAO,CAACQ,GAAG,CAAE,0BAAyBH,OAAQ,EAAC,CAAC;MACnEC,QAAQ,CAACJ,aAAa,CAACO,UAAU,CAACF,IAAI,CAAC,CAAC;IACxC,CAAC,QAAMG,KAAK,EAAC;MACVT,KAAK,CAACS,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;IAE3C;EAEJ,CAAC;AACL;;AAIA;AACA,OAAO,SAASC,kBAAkBA,CAACC,QAAQ,EAAC;EACxC,OAAO,OAAMR,QAAQ,EAAGS,QAAQ,KAAG;IAC/B,IAAG;MACN;MACG,MAAM;QAACR;MAAI,CAAC,GAAC,MAAMP,OAAO,CACxBgB,IAAI,CAAE,6CAA4C,EAACF,QAAQ,EAAC;QAC1DG,OAAO,EAAC;UACJC,aAAa,EAAE,SAAS,GAAGH,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,KAAK,CAACb,IAAI,CAACc,KAAK;UAC3D,cAAc,EAAC;QACnB;MACH,CAAC,CAAC;MAGFf,QAAQ,CAACJ,aAAa,CAACoB,iBAAiB,CAACf,IAAI,CAACgB,cAAc,CAAC,CAAC;MAC9DjB,QAAQ,CAACH,UAAU,CAACqB,eAAe,CAACjB,IAAI,CAACgB,cAAc,CAAC,CAAC;MACzDtB,KAAK,CAACwB,OAAO,CAAC,uCAAuC,CAAC;MACrD;MACA,MAAML,KAAK,GAACM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MACzDT,KAAK,CAACG,cAAc,GAAChB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEgB,cAAc;MACzCK,YAAY,CAACE,OAAO,CAAC,UAAU,EAACJ,IAAI,CAACK,SAAS,CAACX,KAAK,CAAC,CAAC;IAExD,CAAC,QAAMV,KAAK,EAAC;MACXT,KAAK,CAACS,KAAK,CAACA,KAAK,CAAC;IAEpB;EAEJ,CAAC;AACL;;AAGA;AACA,OAAO,SAASsB,aAAaA,CAAC3B,OAAO,EAAE4B,OAAO,EAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC9B,OAAO,CAAC;EACpB,OAAO,OAAMC,QAAQ,EAAGS,QAAQ,KAAG;IAC/B,IAAG;MACN;MACG,MAAM;QAACR;MAAI,CAAC,GAAC,MAAMP,OAAO,CACxBoC,GAAG,CAAE,0BAAyB/B,OAAQ,EAAC,EACvC4B,OAAO,EAAC;QACNhB,OAAO,EAAC;UACRC,aAAa,EAAE,SAAS,GAAGH,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,KAAK,CAACb,IAAI,CAACc;QAEtD;MACH,CAAC,CAAC;MAEDf,QAAQ,CAACJ,aAAa,CAAC8B,aAAa,CAACzB,IAAI,CAAC,CAAC;MAC3CD,QAAQ,CAACH,UAAU,CAACkC,YAAY,CAAC9B,IAAI,CAAC+B,SAAS,CAAC,CAAC;MACnDrC,KAAK,CAACwB,OAAO,CAAC,8BAA8B,CAAC;MAC3C;MACC,MAAML,KAAK,GAACM,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;MACzDT,KAAK,CAACkB,SAAS,GAAC/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE+B,SAAS;MAC/BV,YAAY,CAACE,OAAO,CAAC,UAAU,EAACJ,IAAI,CAACK,SAAS,CAACX,KAAK,CAAC,CAAC;IAEzD,CAAC,QAAMV,KAAK,EAAC;MACZT,KAAK,CAACS,KAAK,CAACA,KAAK,CAAC;IAEnB;EAEJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}