{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst endroitSlice = createSlice({\n  name: \"endroit\",\n  initialState: {\n    endroits: [],\n    endroitCount: null,\n    loading: false,\n    endroitCategory: [],\n    endroitActivity: [],\n    city: \"\",\n    isEndroitCreated: false,\n    endroit: null\n  },\n  //i need trhe reducer \n  //the reducer are les pure function js capable de modifier parties de  store\n  reducers: {\n    setEndroits(state, action) {\n      state.endroits = action.payload;\n    },\n    setEndroitCount(state, action) {\n      state.endroitCount = action.payload;\n    },\n    setEndroitCategory(state, action) {\n      state.endroitCategory = action.payload;\n    },\n    setLoading(state) {\n      state.loading = true;\n    },\n    setIsEndroitCreated(state) {\n      state.isEndroitCreated = true;\n      state.loading = false;\n    },\n    clearLoading(state) {\n      state.loading = false;\n    },\n    clearIsEndroitCreated(state) {\n      state.isEndroitCreated = false;\n    },\n    setEndroit(state, action) {\n      state.endroit = action.payload;\n    },\n    deleteEndroit(state, action) {\n      state.endroits.filter(a => a._id !== action.payload);\n    }\n  }\n});\n//les données a envoyer called payload  w tousel a travel l action \n//login va trasporter 2 chose (state et l'action)\nconst endroitReducer = endroitSlice.reducer;\nconst endroitAction = endroitSlice.actions;\nexport { endroitAction, endroitReducer };","map":{"version":3,"names":["createSlice","endroitSlice","name","initialState","endroits","endroitCount","loading","endroitCategory","endroitActivity","city","isEndroitCreated","endroit","reducers","setEndroits","state","action","payload","setEndroitCount","setEndroitCategory","setLoading","setIsEndroitCreated","clearLoading","clearIsEndroitCreated","setEndroit","deleteEndroit","filter","a","_id","endroitReducer","reducer","endroitAction","actions"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/slices/endroitSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst  endroitSlice = createSlice({\n    name :\"endroit\",\n    initialState:{\n    endroits:[],\n    endroitCount:null,\n    loading:false,\n    endroitCategory:[],\n    endroitActivity:[],\n    city:\"\",\n    isEndroitCreated:false,\n    endroit:null,\n\n\n    },\n       \n    //i need trhe reducer \n    //the reducer are les pure function js capable de modifier parties de  store\n     reducers :{\n        setEndroits(state,action){\n            state.endroits=action.payload\n        },\n        setEndroitCount(state,action){\n            state.endroitCount=action.payload\n        },\n        setEndroitCategory(state,action){\n            state.endroitCategory=action.payload\n        },\n        \n        setLoading(state){\n            state.loading=true;\n        },\n        setIsEndroitCreated(state){\n            state.isEndroitCreated=true;\n            state.loading=false;\n        },\n        clearLoading(state){\n            state.loading=false;\n        },\n        clearIsEndroitCreated(state){\n            state.isEndroitCreated=false; \n        },\n        setEndroit(state,action){\n            state.endroit=action.payload\n        },\n        deleteEndroit(state,action){\n            state.endroits.filter(a => a._id !== action.payload)\n        }\n       \n     },\n\n})\n//les données a envoyer called payload  w tousel a travel l action \n//login va trasporter 2 chose (state et l'action)\nconst   endroitReducer=endroitSlice.reducer;\nconst endroitAction =endroitSlice.actions;\nexport {\n    endroitAction,\n    endroitReducer\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAOC,YAAY,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAC;IACbC,QAAQ,EAAC,EAAE;IACXC,YAAY,EAAC,IAAI;IACjBC,OAAO,EAAC,KAAK;IACbC,eAAe,EAAC,EAAE;IAClBC,eAAe,EAAC,EAAE;IAClBC,IAAI,EAAC,EAAE;IACPC,gBAAgB,EAAC,KAAK;IACtBC,OAAO,EAAC;EAGR,CAAC;EAED;EACA;EACCC,QAAQ,EAAE;IACPC,WAAWA,CAACC,KAAK,EAACC,MAAM,EAAC;MACrBD,KAAK,CAACV,QAAQ,GAACW,MAAM,CAACC,OAAO;IACjC,CAAC;IACDC,eAAeA,CAACH,KAAK,EAACC,MAAM,EAAC;MACzBD,KAAK,CAACT,YAAY,GAACU,MAAM,CAACC,OAAO;IACrC,CAAC;IACDE,kBAAkBA,CAACJ,KAAK,EAACC,MAAM,EAAC;MAC5BD,KAAK,CAACP,eAAe,GAACQ,MAAM,CAACC,OAAO;IACxC,CAAC;IAEDG,UAAUA,CAACL,KAAK,EAAC;MACbA,KAAK,CAACR,OAAO,GAAC,IAAI;IACtB,CAAC;IACDc,mBAAmBA,CAACN,KAAK,EAAC;MACtBA,KAAK,CAACJ,gBAAgB,GAAC,IAAI;MAC3BI,KAAK,CAACR,OAAO,GAAC,KAAK;IACvB,CAAC;IACDe,YAAYA,CAACP,KAAK,EAAC;MACfA,KAAK,CAACR,OAAO,GAAC,KAAK;IACvB,CAAC;IACDgB,qBAAqBA,CAACR,KAAK,EAAC;MACxBA,KAAK,CAACJ,gBAAgB,GAAC,KAAK;IAChC,CAAC;IACDa,UAAUA,CAACT,KAAK,EAACC,MAAM,EAAC;MACpBD,KAAK,CAACH,OAAO,GAACI,MAAM,CAACC,OAAO;IAChC,CAAC;IACDQ,aAAaA,CAACV,KAAK,EAACC,MAAM,EAAC;MACvBD,KAAK,CAACV,QAAQ,CAACqB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKZ,MAAM,CAACC,OAAO,CAAC;IACxD;EAEH;AAEL,CAAC,CAAC;AACF;AACA;AACA,MAAQY,cAAc,GAAC3B,YAAY,CAAC4B,OAAO;AAC3C,MAAMC,aAAa,GAAE7B,YAAY,CAAC8B,OAAO;AACzC,SACID,aAAa,EACbF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}