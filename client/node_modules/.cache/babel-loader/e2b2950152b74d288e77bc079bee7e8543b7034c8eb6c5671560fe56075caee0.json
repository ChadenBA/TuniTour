{"ast":null,"code":"import request from '../../utils/request';\nimport { toast } from \"react-toastify\";\nimport { cityAction } from '../slices/citySlice';\n\n// get city\nexport function fetchCities() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`/api/cities`);\n      dispatch(cityAction.setCities(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n      console.log(error);\n    }\n  };\n}\n\n//get city count \nexport function getCityCount() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`api/admin/cities/count`);\n      dispatch(cityAction.setCityCount(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//create city\nexport function createCity(newCity) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(cityAction.setLoading());\n      await request.post(`api/cities/admin`, newCity, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(cityAction.setIsCityCreated()); //put it ro true\n      dispatch(fetchCities());\n      toast.success(\"city created successfully\");\n      // after 2 seconsd we set it to false to return to the page\n      setTimeout(() => dispatch(cityAction.clearIsCityCreated()), 2000); //2 second\n    } catch (error) {\n      console.log(error.response);\n      dispatch(cityAction.clearLoading());\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//update city picture \nexport function updateCityPicture(newImage, EndroitId, imageId) {\n  return async (dispatch, getState) => {\n    try {\n      await request.put(`api/cities/admin/update-image/${EndroitId}/${imageId}`, newImage, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(fetchCities());\n      toast.success(\"new city image uploaded successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n      console.log(error.response);\n    }\n  };\n}\n\n//update city\nexport function updateCity(newCity, CityId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.put(`api/cities/admin/${CityId}`, newCity, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(cityAction.setCity(data));\n      dispatch(fetchCities());\n      toast.success(\"city updated successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//delete city\nexport function deleteCity(CityId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.delete(`api/cities/admin/${CityId}`, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(cityAction.deleteCity(data.cityId));\n      dispatch(fetchCities());\n      toast.success(\"city deleted successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//delete image \nexport function deleteImage(cityId, imageId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.delete(`api/cities/admin/update-image/${cityId}/${imageId}`, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(cityAction.deleteCity(data.cityId));\n      dispatch(fetchCities());\n      toast.success(\"image deleted successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}","map":{"version":3,"names":["request","toast","cityAction","fetchCities","dispatch","data","get","setCities","error","response","message","console","log","getCityCount","setCityCount","createCity","newCity","getState","setLoading","post","headers","Authorization","auth","admin","token","setIsCityCreated","success","setTimeout","clearIsCityCreated","clearLoading","updateCityPicture","newImage","EndroitId","imageId","put","updateCity","CityId","setCity","deleteCity","delete","cityId","deleteImage"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/apiCalls/cityApiCall.js"],"sourcesContent":["\nimport request  from '../../utils/request'\nimport { toast } from \"react-toastify\"\nimport { cityAction } from '../slices/citySlice';\n\n\n// get city\nexport function fetchCities(){\n    return async(dispatch)=>{\n        try{\n        const {data}=await request.get(`/api/cities`);\n        dispatch(cityAction.setCities(data))\n\n        }catch(error){\n         toast.error(error.response.data.message)\n          console.log(error)\n      \n        }\n    }\n}\n\n//get city count \nexport function getCityCount(){\n    return async(dispatch)=>{\n        try{\n\n        const {data}=await request.get(`api/admin/cities/count`);\n        dispatch(cityAction.setCityCount(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n//create city\nexport function createCity(newCity){\n    return async(dispatch , getState)=>{\n        try{\n        dispatch(cityAction.setLoading())\n        await request.post(`api/cities/admin` , newCity,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n                \"Content-Type\":\"multipart/form-data\"\n            } \n        });\n        dispatch(cityAction.setIsCityCreated())//put it ro true\n        dispatch(fetchCities())\n        toast.success(\"city created successfully\")\n        // after 2 seconsd we set it to false to return to the page\n        setTimeout(()=>dispatch(cityAction.clearIsCityCreated()),2000)//2 second\n      \n        }catch(error){\n            console.log(error.response)\n           dispatch(cityAction.clearLoading())\n        toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n\n\n\n//update city picture \nexport function updateCityPicture(newImage,EndroitId, imageId){\n    return async(dispatch , getState)=>{\n        try{\n      \n    await request.put(`api/cities/admin/update-image/${EndroitId}/${imageId}` , newImage,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n                \"Content-Type\":\"multipart/form-data\"\n            } \n        });\n        dispatch(fetchCities())\n       toast.success(\"new city image uploaded successfully\")\n        }catch(error){\n         toast.error(error.response.data.message)\n         console.log(error.response)\n        }\n\n    }\n}\n\n\n//update city\nexport function updateCity(newCity,CityId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.put(`api/cities/admin/${CityId}` , newCity,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n              \n            } \n        });\n        dispatch(cityAction.setCity(data))\n        dispatch(fetchCities())\n        toast.success(\"city updated successfully\")\n        }catch(error){\n        toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n\n//delete city\nexport function deleteCity(CityId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.delete(`api/cities/admin/${CityId}`,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n              \n            } \n        });\n        dispatch(cityAction.deleteCity(data.cityId))\n        dispatch(fetchCities())\n        toast.success(\"city deleted successfully\")\n        }catch(error){\n        toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n\n//delete image \nexport function deleteImage(cityId , imageId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.delete(`api/cities/admin/update-image/${cityId}/${imageId}`,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n              \n            } \n        });\n        dispatch(cityAction.deleteCity(data.cityId))\n        dispatch(fetchCities())\n        toast.success(\"image deleted successfully\")\n        }catch(error){\n            \n            toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}