{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    admin: localStorage.getItem(\"admininfo\") ? JSON.parse(localStorage.getItem(\"admininfo\")) : null\n  },\n  isEmailVerified: false,\n  //i need trhe reducer \n  //the reducer are les pure function js capable de modifier parties de  store\n  reducers: {\n    login: (state, action) => {\n      state.admin = action.payload;\n    },\n    logout: (state, action) => {\n      state.admin = null;\n    },\n    setAdminPicture(state, action) {\n      state.admin.profilepicture = action.payload;\n    },\n    setAdminname(state, action) {\n      state.admin.adminname = action.payload;\n    },\n    setIsemail(state) {\n      state.isEmailVerified = true;\n    }\n  }\n});\n//les données a envoyer called payload  w tousel a travel l action \n//login va trasporter 2 chose (state et l'action)\nconst authReducer = authSlice.reducer;\nconst authAction = authSlice.actions;\nexport { authAction, authReducer };","map":{"version":3,"names":["createSlice","authSlice","name","initialState","admin","localStorage","getItem","JSON","parse","isEmailVerified","reducers","login","state","action","payload","logout","setAdminPicture","profilepicture","setAdminname","adminname","setIsemail","authReducer","reducer","authAction","actions"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/slices/authslice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst  authSlice = createSlice({\n    name :\"auth\",\n    initialState:{\n        admin:localStorage.getItem(\"admininfo\") ?\n        JSON.parse(localStorage.getItem(\"admininfo\")):null,},\n        isEmailVerified:false,\n    //i need trhe reducer \n    //the reducer are les pure function js capable de modifier parties de  store\n     reducers :{\n        login : (state , action)=>{\n            state.admin=action.payload;\n        },\n        logout : (state , action)=>{\n            state.admin=null;\n        },\n        setAdminPicture(state,action){\n               state.admin.profilepicture=action.payload;\n        },\n    \n        setAdminname(state,action){\n            state.admin.adminname=action.payload\n        },\n        setIsemail(state){\n            state.isEmailVerified=true;\n        }, \n        \n  \n\n     },\n\n})\n//les données a envoyer called payload  w tousel a travel l action \n//login va trasporter 2 chose (state et l'action)\nconst authReducer=authSlice.reducer;\nconst authAction =authSlice.actions;\nexport {\n    authAction,\n    authReducer\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAOC,SAAS,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAC;IACTC,KAAK,EAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACvCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAAC;EAAK,CAAC;EACpDG,eAAe,EAAC,KAAK;EACzB;EACA;EACCC,QAAQ,EAAE;IACPC,KAAK,EAAGA,CAACC,KAAK,EAAGC,MAAM,KAAG;MACtBD,KAAK,CAACR,KAAK,GAACS,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDC,MAAM,EAAGA,CAACH,KAAK,EAAGC,MAAM,KAAG;MACvBD,KAAK,CAACR,KAAK,GAAC,IAAI;IACpB,CAAC;IACDY,eAAeA,CAACJ,KAAK,EAACC,MAAM,EAAC;MACtBD,KAAK,CAACR,KAAK,CAACa,cAAc,GAACJ,MAAM,CAACC,OAAO;IAChD,CAAC;IAEDI,YAAYA,CAACN,KAAK,EAACC,MAAM,EAAC;MACtBD,KAAK,CAACR,KAAK,CAACe,SAAS,GAACN,MAAM,CAACC,OAAO;IACxC,CAAC;IACDM,UAAUA,CAACR,KAAK,EAAC;MACbA,KAAK,CAACH,eAAe,GAAC,IAAI;IAC9B;EAIH;AAEL,CAAC,CAAC;AACF;AACA;AACA,MAAMY,WAAW,GAACpB,SAAS,CAACqB,OAAO;AACnC,MAAMC,UAAU,GAAEtB,SAAS,CAACuB,OAAO;AACnC,SACID,UAAU,EACVF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}