{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport loginSlice from \"./features/loginSlice\";\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\nimport userSlice from './features/userSlice';\nimport placesSlice from \"./features/PlaceSlice\";\nimport { authReducer } from './redux/slices/authslice';\nimport { passwordReducer } from './redux/slices/paswordSlice';\nimport { endroitReducer } from './redux/slices/endroitSlice';\nimport { profileReducer } from './redux/slices/profile.slice';\nimport { categoryReducer } from './redux/slices/categorySlice';\nimport { cityReducer } from './redux/slices/citySlice';\nimport { activityReducer } from './redux/slices/activitySlice';\nimport { agencyReducer } from './redux/slices/agencySlice';\n//store et un constante qui va store les donnees partagee\n\nconst persistConfig = {\n  key: \"root\",\n  version: 2,\n  // Increment the version number\n  storage\n};\nconst reducer = combineReducers({\n  login: loginSlice,\n  user: userSlice,\n  place: placesSlice,\n  auth: authReducer,\n  profile: profileReducer,\n  endroit: endroitReducer,\n  category: categoryReducer,\n  city: cityReducer,\n  activity: activityReducer,\n  agency: agencyReducer,\n  password: passwordReducer\n});\nconst persisteReducer = persistReducer(persistConfig, reducer);\nconst store = configureStore({\n  reducer: persisteReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    immutableCheck: false,\n    serializableCheck: false\n  })\n});\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","loginSlice","storage","persistReducer","userSlice","placesSlice","authReducer","passwordReducer","endroitReducer","profileReducer","categoryReducer","cityReducer","activityReducer","agencyReducer","persistConfig","key","version","reducer","login","user","place","auth","profile","endroit","category","city","activity","agency","password","persisteReducer","store","middleware","getDefaultMiddleware","immutableCheck","serializableCheck"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport loginSlice from \"./features/loginSlice\"\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport userSlice from './features/userSlice'\nimport placesSlice from \"./features/PlaceSlice\"\n\nimport { authReducer } from './redux/slices/authslice'\nimport { passwordReducer } from './redux/slices/paswordSlice';\nimport { endroitReducer } from './redux/slices/endroitSlice';\nimport { profileReducer } from './redux/slices/profile.slice';\nimport { categoryReducer } from './redux/slices/categorySlice';\nimport { cityReducer } from './redux/slices/citySlice';\nimport { activityReducer } from './redux/slices/activitySlice';\nimport { agencyReducer } from './redux/slices/agencySlice';\n//store et un constante qui va store les donnees partagee\n\n\n\n\nconst persistConfig = {\n    key: \"root\",\n    version: 2, // Increment the version number\n    storage,\n};\n\n\nconst reducer = combineReducers({\n    login: loginSlice,\n    user: userSlice,\n    place: placesSlice,\n    auth: authReducer,\n    profile: profileReducer,\n    endroit: endroitReducer,\n    category: categoryReducer,\n    city: cityReducer,\n    activity: activityReducer,\n    agency: agencyReducer,\n    password: passwordReducer,\n})\n\nconst persisteReducer = persistReducer(persistConfig, reducer)\n\n\nconst store = configureStore({\n    reducer: persisteReducer,\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            immutableCheck: false,\n            serializableCheck: false\n        }),\n\n\n\n})\n\n\nexport default store"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,WAAW,MAAM,uBAAuB;AAE/C,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,aAAa,QAAQ,4BAA4B;AAC1D;;AAKA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EAAE;EACZd;AACJ,CAAC;AAGD,MAAMe,OAAO,GAAGjB,eAAe,CAAC;EAC5BkB,KAAK,EAAEjB,UAAU;EACjBkB,IAAI,EAAEf,SAAS;EACfgB,KAAK,EAAEf,WAAW;EAClBgB,IAAI,EAAEf,WAAW;EACjBgB,OAAO,EAAEb,cAAc;EACvBc,OAAO,EAAEf,cAAc;EACvBgB,QAAQ,EAAEd,eAAe;EACzBe,IAAI,EAAEd,WAAW;EACjBe,QAAQ,EAAEd,eAAe;EACzBe,MAAM,EAAEd,aAAa;EACrBe,QAAQ,EAAErB;AACd,CAAC,CAAC;AAEF,MAAMsB,eAAe,GAAG1B,cAAc,CAACW,aAAa,EAAEG,OAAO,CAAC;AAG9D,MAAMa,KAAK,GAAG/B,cAAc,CAAC;EACzBkB,OAAO,EAAEY,eAAe;EACxBE,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC;IACjBC,cAAc,EAAE,KAAK;IACrBC,iBAAiB,EAAE;EACvB,CAAC;AAIT,CAAC,CAAC;AAGF,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}