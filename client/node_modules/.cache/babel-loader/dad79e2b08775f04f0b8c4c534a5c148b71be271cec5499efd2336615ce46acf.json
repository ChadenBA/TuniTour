{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst citySlice = createSlice({\n  name: \"city\",\n  initialState: {\n    cities: [],\n    loading: false,\n    activity: [],\n    endroit: [],\n    isCityCreated: false,\n    city: null\n  },\n  reducers: {\n    setCities(state, action) {\n      state.cities = action.payload;\n    },\n    setLoading(state) {\n      state.loading = true;\n    },\n    setIsCityCreated(state) {\n      state.isCityCreated = true;\n      state.loading = false;\n    },\n    clearLoading(state) {\n      state.loading = false;\n    },\n    clearIsCityCreated(state) {\n      state.isCityCreated = false;\n    },\n    setCity(state, action) {\n      state.city = action.payload;\n    },\n    deleteCity(state, action) {\n      state.cities.filter(a => a._id !== action.payload);\n    }\n  }\n});\nconst cityReducer = citySlice.reducer;\nconst cityAction = citySlice.actions;\nexport { cityAction, cityReducer };","map":{"version":3,"names":["createSlice","citySlice","name","initialState","cities","loading","activity","endroit","isCityCreated","city","reducers","setCities","state","action","payload","setLoading","setIsCityCreated","clearLoading","clearIsCityCreated","setCity","deleteCity","filter","a","_id","cityReducer","reducer","cityAction","actions"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/slices/citySlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst  citySlice = createSlice({\n    name :\"city\",\n    initialState:{\n        cities:[],\n        loading:false,\n        activity:[],\n        endroit:[],\n        isCityCreated:false,\n        city:null,\n    },\n     reducers :{\n        setCities(state,action){\n            state.cities=action.payload\n        },\n        setLoading(state){\n            state.loading=true;\n        },\n        setIsCityCreated(state){\n            state.isCityCreated=true;\n            state.loading=false;\n        },\n        clearLoading(state){\n            state.loading=false;\n        },\n        clearIsCityCreated(state){\n            state.isCityCreated=false; \n        },\n        setCity(state,action){\n            state.city=action.payload\n        },\n        deleteCity(state,action){\n            state.cities.filter(a => a._id !== action.payload)\n        }\n\n\n     },\n\n})\n\nconst  cityReducer=citySlice.reducer;\nconst cityAction =citySlice.actions;\nexport {\n    cityAction,\n    cityReducer\n}"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAOC,SAAS,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAC;IACTC,MAAM,EAAC,EAAE;IACTC,OAAO,EAAC,KAAK;IACbC,QAAQ,EAAC,EAAE;IACXC,OAAO,EAAC,EAAE;IACVC,aAAa,EAAC,KAAK;IACnBC,IAAI,EAAC;EACT,CAAC;EACAC,QAAQ,EAAE;IACPC,SAASA,CAACC,KAAK,EAACC,MAAM,EAAC;MACnBD,KAAK,CAACR,MAAM,GAACS,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDC,UAAUA,CAACH,KAAK,EAAC;MACbA,KAAK,CAACP,OAAO,GAAC,IAAI;IACtB,CAAC;IACDW,gBAAgBA,CAACJ,KAAK,EAAC;MACnBA,KAAK,CAACJ,aAAa,GAAC,IAAI;MACxBI,KAAK,CAACP,OAAO,GAAC,KAAK;IACvB,CAAC;IACDY,YAAYA,CAACL,KAAK,EAAC;MACfA,KAAK,CAACP,OAAO,GAAC,KAAK;IACvB,CAAC;IACDa,kBAAkBA,CAACN,KAAK,EAAC;MACrBA,KAAK,CAACJ,aAAa,GAAC,KAAK;IAC7B,CAAC;IACDW,OAAOA,CAACP,KAAK,EAACC,MAAM,EAAC;MACjBD,KAAK,CAACH,IAAI,GAACI,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDM,UAAUA,CAACR,KAAK,EAACC,MAAM,EAAC;MACpBD,KAAK,CAACR,MAAM,CAACiB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAKV,MAAM,CAACC,OAAO,CAAC;IACtD;EAGH;AAEL,CAAC,CAAC;AAEF,MAAOU,WAAW,GAACvB,SAAS,CAACwB,OAAO;AACpC,MAAMC,UAAU,GAAEzB,SAAS,CAAC0B,OAAO;AACnC,SACID,UAAU,EACVF,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}