{"ast":null,"code":"import request from '../../utils/request';\nimport { toast } from \"react-toastify\";\nimport { endroitAction } from '../slices/endroitSlice';\n\n// get endroit \nexport function fetchEndroit() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`api/endroits/`);\n      dispatch(endroitAction.setEndroits(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//get endroit count \nexport function getEndroitCount() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`api/endroits/admin/count`);\n      dispatch(endroitAction.setEndroitCount(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//fetch endroit based on category \nexport function fetchEndroitBasedCategory(category) {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`api/admin/endroits?category=${category}`);\n      dispatch(endroitAction.setEndroitCategory(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//create endroit \nexport function createEndroit(newEndroit) {\n  return async (dispatch, getState) => {\n    try {\n      dispatch(endroitAction.setLoading());\n      await request.post(`api/endroits/admin`, newEndroit, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(endroitAction.setIsEndroitCreated()); //put it ro true\n      dispatch(fetchEndroit());\n      toast.success(\"place created successfully\");\n      // after 2 seconsd we set it to false to return to the page\n      setTimeout(() => dispatch(endroitAction.clearIsEndroitCreated()), 2000); //2 second\n    } catch (error) {\n      console.log(error.response);\n      dispatch(endroitAction.clearLoading());\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//update endroit picture \nexport function updateEndroitPicture(newImage, EndroitId, imageId) {\n  return async (dispatch, getState) => {\n    try {\n      await request.put(`api/endroits/admin/update-image/${EndroitId}/${imageId}`, newImage, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(fetchEndroit());\n      toast.success(\"new place image uploaded successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n      console.log(error.response);\n    }\n  };\n}\n\n//update endroit \nexport function updateEndoit(newEndroit, EndroitId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.put(`api/endroits/admin/${EndroitId}`, newEndroit, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(endroitAction.setEndroit(data));\n      dispatch(fetchEndroit());\n      toast.success(\"place updated successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//delete endroit \nexport function deleteEndoit(EndroitId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.delete(`api/endroits/admin/${EndroitId}`, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(fetchEndroit());\n      dispatch(endroitAction.deleteEndroit(data.EndroitId));\n      toast.success(\"place deleted successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//delete image\nexport function deleteImage(EndroitId, imageId) {\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await request.delete(`api/endroits/admin/update-image/${EndroitId}/${imageId}`, {\n        headers: {\n          Authorization: \"Bearer \" + getState().auth.admin.data.token\n        }\n      });\n      dispatch(endroitAction.deleteEndroit(data.EndroitId));\n      dispatch(fetchEndroit());\n      toast.success(\"image deleted successfully\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n//fetch single endroit \n\nexport function fetchSingleendroit(endroitId) {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await request.get(`api/endroits/admin/${endroitId}`);\n      dispatch(endroitAction.setEndroit(data));\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}","map":{"version":3,"names":["request","toast","endroitAction","fetchEndroit","dispatch","data","get","setEndroits","error","response","message","getEndroitCount","setEndroitCount","fetchEndroitBasedCategory","category","setEndroitCategory","createEndroit","newEndroit","getState","setLoading","post","headers","Authorization","auth","admin","token","setIsEndroitCreated","success","setTimeout","clearIsEndroitCreated","console","log","clearLoading","updateEndroitPicture","newImage","EndroitId","imageId","put","updateEndoit","setEndroit","deleteEndoit","delete","deleteEndroit","deleteImage","fetchSingleendroit","endroitId"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/apiCalls/endroitApiCal.js"],"sourcesContent":["\nimport request  from '../../utils/request'\nimport { toast } from \"react-toastify\"\nimport { endroitAction } from '../slices/endroitSlice';\n\n\n// get endroit \nexport function fetchEndroit(){\n    return async(dispatch)=>{\n        try{\n\n        const {data}=await request.get(`api/endroits/`);\n        dispatch(endroitAction.setEndroits(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n//get endroit count \nexport function getEndroitCount(){\n    return async(dispatch)=>{\n        try{\n\n        const {data}=await request.get(`api/endroits/admin/count`);\n        dispatch(endroitAction.setEndroitCount(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n//fetch endroit based on category \nexport function fetchEndroitBasedCategory(category){\n    return async(dispatch)=>{\n        try{\n\n        const {data}=await request.get(`api/admin/endroits?category=${category}`);\n        dispatch(endroitAction.setEndroitCategory(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n\n//create endroit \nexport function createEndroit(newEndroit){\n    return async(dispatch , getState)=>{\n        try{\n        dispatch(endroitAction.setLoading())\n        await request.post(`api/endroits/admin` , newEndroit,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n                \"Content-Type\":\"multipart/form-data\"\n            } \n        });\n        dispatch(endroitAction.setIsEndroitCreated())//put it ro true\n        dispatch(fetchEndroit())\n        toast.success(\"place created successfully\")\n        // after 2 seconsd we set it to false to return to the page\n        setTimeout(()=>dispatch(endroitAction.clearIsEndroitCreated()),2000)//2 second\n        }catch(error){\n            console.log(error.response)\n           dispatch(endroitAction.clearLoading())\n         toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n\n//update endroit picture \nexport function updateEndroitPicture(newImage,EndroitId, imageId){\n    return async(dispatch , getState)=>{\n        try{\n      \n    await request.put(`api/endroits/admin/update-image/${EndroitId}/${imageId}` , newImage,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n                \"Content-Type\":\"multipart/form-data\"\n            } \n        });\n        dispatch(fetchEndroit())\n       toast.success(\"new place image uploaded successfully\")\n        }catch(error){\n         toast.error(error.response.data.message)\n         console.log(error.response)\n        }\n\n    }\n}\n\n\n//update endroit \nexport function updateEndoit(newEndroit,EndroitId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.put(`api/endroits/admin/${EndroitId}` , newEndroit,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,           \n            } \n        });\n        dispatch(endroitAction.setEndroit(data))\n        dispatch(fetchEndroit())\n        toast.success(\"place updated successfully\")\n        }catch(error){\n        toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n\n//delete endroit \nexport function deleteEndoit(EndroitId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.delete(`api/endroits/admin/${EndroitId}`,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n              \n            } \n        });\n        dispatch(fetchEndroit())\n        dispatch(endroitAction.deleteEndroit(data.EndroitId))\n        toast.success(\"place deleted successfully\")\n        }catch(error){\n        toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n//delete image\nexport function deleteImage(EndroitId , imageId){\n    return async(dispatch , getState)=>{\n        try{\n      \n  const {data}=  await request.delete(`api/endroits/admin/update-image/${EndroitId}/${imageId}`,{\n            headers:{\n                Authorization: \"Bearer \" + getState().auth.admin.data.token,\n              \n            } \n        });\n        dispatch(endroitAction.deleteEndroit(data.EndroitId))\n        dispatch(fetchEndroit())\n        toast.success(\"image deleted successfully\")\n        }catch(error){\n            \n            toast.error(error.response.data.message)\n        \n        }\n\n    }\n}\n\n//fetch single endroit \n \nexport function fetchSingleendroit(endroitId){\n    return async(dispatch)=>{\n        try{\n\n        const {data}=await request.get(`api/endroits/admin/${endroitId}`);\n        dispatch(endroitAction.setEndroit(data))\n        }catch(error){\n           toast.error(error.response.data.message)\n      \n        }\n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}