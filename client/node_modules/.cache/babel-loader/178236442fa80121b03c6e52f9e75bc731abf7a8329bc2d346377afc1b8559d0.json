{"ast":null,"code":"'use strict';\n\nconst format = require('quick-format-unescaped');\nmodule.exports = pino;\nconst _console = pfGlobalThisOrFallback().console || {};\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue,\n  errWithCause: asErrValue\n};\nfunction shouldSerialize(serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err';\n    });\n    return hasToFilter;\n  } else if (serialize === true) {\n    return Object.keys(serializers);\n  }\n  return false;\n}\nfunction pino(opts) {\n  opts = opts || {};\n  opts.browser = opts.browser || {};\n  const transmit = opts.browser.transmit;\n  if (transmit && typeof transmit.send !== 'function') {\n    throw Error('pino: transmit option must have a send function');\n  }\n  const proto = opts.browser.write || _console;\n  if (opts.browser.write) opts.browser.asObject = true;\n  const serializers = opts.serializers || {};\n  const serialize = shouldSerialize(opts.browser.serialize, serializers);\n  let stdErrSerialize = opts.browser.serialize;\n  if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf('!stdSerializers.err') > -1) stdErrSerialize = false;\n  const customLevels = Object.keys(opts.customLevels || {});\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'].concat(customLevels);\n  if (typeof proto === 'function') {\n    levels.forEach(function (level) {\n      proto[level] = proto;\n    });\n  }\n  if (opts.enabled === false || opts.browser.disabled) opts.level = 'silent';\n  const level = opts.level || 'info';\n  const logger = Object.create(proto);\n  if (!logger.log) logger.log = noop;\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  });\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  });\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  };\n  logger.levels = getLevels(opts);\n  logger.level = level;\n  logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;\n  logger.serializers = serializers;\n  logger._serialize = serialize;\n  logger._stdErrSerialize = stdErrSerialize;\n  logger.child = child;\n  if (transmit) logger._logEvent = createLogEventShape();\n  function getLevelVal() {\n    return this.level === 'silent' ? Infinity : this.levels.values[this.level];\n  }\n  function getLevel() {\n    return this._level;\n  }\n  function setLevel(level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level);\n    }\n    this._level = level;\n    set(setOpts, logger, 'error', 'log'); // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error');\n    set(setOpts, logger, 'warn', 'error');\n    set(setOpts, logger, 'info', 'log');\n    set(setOpts, logger, 'debug', 'log');\n    set(setOpts, logger, 'trace', 'log');\n    customLevels.forEach(function (level) {\n      set(setOpts, logger, level, 'log');\n    });\n  }\n  function child(bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino');\n    }\n    childOptions = childOptions || {};\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers;\n    }\n    const childOptionsSerializers = childOptions.serializers;\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers);\n      var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;\n      delete bindings.serializers;\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);\n    }\n    function Child(parent) {\n      this._childLevel = (parent._childLevel | 0) + 1;\n      this.error = bind(parent, bindings, 'error');\n      this.fatal = bind(parent, bindings, 'fatal');\n      this.warn = bind(parent, bindings, 'warn');\n      this.info = bind(parent, bindings, 'info');\n      this.debug = bind(parent, bindings, 'debug');\n      this.trace = bind(parent, bindings, 'trace');\n      if (childSerializers) {\n        this.serializers = childSerializers;\n        this._serialize = childSerialize;\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape([].concat(parent._logEvent.bindings, bindings));\n      }\n    }\n    Child.prototype = this;\n    return new Child(this);\n  }\n  return logger;\n}\nfunction getLevels(opts) {\n  const customLevels = opts.customLevels || {};\n  const values = Object.assign({}, pino.levels.values, customLevels);\n  const labels = Object.assign({}, pino.levels.labels, invertObject(customLevels));\n  return {\n    values,\n    labels\n  };\n}\nfunction invertObject(obj) {\n  const inverted = {};\n  Object.keys(obj).forEach(function (key) {\n    inverted[obj[key]] = key;\n  });\n  return inverted;\n}\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n};\npino.stdSerializers = stdSerializers;\npino.stdTimeFunctions = Object.assign({}, {\n  nullTime,\n  epochTime,\n  unixTime,\n  isoTime\n});\nfunction set(opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger);\n  logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;\n  wrap(opts, logger, level);\n}\nfunction wrap(opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return;\n  logger[level] = function (write) {\n    return function LOG() {\n      const ts = opts.timestamp();\n      const args = new Array(arguments.length);\n      const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i];\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts));else write.apply(proto, args);\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level;\n        const transmitValue = logger.levels.values[transmitLevel];\n        const methodValue = logger.levels.values[level];\n        if (methodValue < transmitValue) return;\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: logger.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args);\n      }\n    };\n  }(logger[level]);\n}\nfunction asObject(logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);\n  const argsCloned = args.slice();\n  let msg = argsCloned[0];\n  const o = {};\n  if (ts) {\n    o.time = ts;\n  }\n  o.level = logger.levels.values[level];\n  let lvl = (logger._childLevel | 0) + 1;\n  if (lvl < 1) lvl = 1;\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift());\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined;\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned);\n  if (msg !== undefined) o.msg = msg;\n  return o;\n}\nfunction applySerializers(args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i]);\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k]);\n        }\n      }\n    }\n  }\n}\nfunction bind(parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length);\n    args[0] = bindings;\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1];\n    }\n    return parent[level].apply(this, args);\n  };\n}\nfunction transmit(logger, opts, args) {\n  const send = opts.send;\n  const ts = opts.ts;\n  const methodLevel = opts.methodLevel;\n  const methodValue = opts.methodValue;\n  const val = opts.val;\n  const bindings = logger._logEvent.bindings;\n  applySerializers(args, logger._serialize || Object.keys(logger.serializers), logger.serializers, logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize);\n  logger._logEvent.ts = ts;\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1;\n  });\n  logger._logEvent.level.label = methodLevel;\n  logger._logEvent.level.value = methodValue;\n  send(methodLevel, logger._logEvent, val);\n  logger._logEvent = createLogEventShape(bindings);\n}\nfunction createLogEventShape(bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: {\n      label: '',\n      value: 0\n    }\n  };\n}\nfunction asErrValue(err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  };\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key];\n    }\n  }\n  return obj;\n}\nfunction getTimeFunction(opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp;\n  }\n  if (opts.timestamp === false) {\n    return nullTime;\n  }\n  return epochTime;\n}\nfunction mock() {\n  return {};\n}\nfunction passthrough(a) {\n  return a;\n}\nfunction noop() {}\nfunction nullTime() {\n  return false;\n}\nfunction epochTime() {\n  return Date.now();\n}\nfunction unixTime() {\n  return Math.round(Date.now() / 1000.0);\n}\nfunction isoTime() {\n  return new Date(Date.now()).toISOString();\n} // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback() {\n  function defd(o) {\n    return typeof o !== 'undefined' && o;\n  }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis;\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis;\n        return this.globalThis = this;\n      },\n      configurable: true\n    });\n    return globalThis;\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {};\n  }\n}\n/* eslint-enable */","map":{"version":3,"names":["format","require","module","exports","pino","_console","pfGlobalThisOrFallback","console","stdSerializers","mapHttpRequest","mock","mapHttpResponse","wrapRequestSerializer","passthrough","wrapResponseSerializer","wrapErrorSerializer","req","res","err","asErrValue","errWithCause","shouldSerialize","serialize","serializers","Array","isArray","hasToFilter","filter","k","Object","keys","opts","browser","transmit","send","Error","proto","write","asObject","stdErrSerialize","indexOf","customLevels","levels","concat","forEach","level","enabled","disabled","logger","create","log","noop","defineProperty","get","getLevelVal","getLevel","set","setLevel","setOpts","timestamp","getTimeFunction","getLevels","setMaxListeners","getMaxListeners","emit","addListener","on","prependListener","once","prependOnceListener","removeListener","removeAllListeners","listeners","listenerCount","eventNames","flush","_serialize","_stdErrSerialize","child","_logEvent","createLogEventShape","Infinity","values","_level","bindings","childOptions","childOptionsSerializers","childSerializers","assign","childSerialize","applySerializers","Child","parent","_childLevel","error","bind","fatal","warn","info","debug","trace","prototype","labels","invertObject","obj","inverted","key","stdTimeFunctions","nullTime","epochTime","unixTime","isoTime","fallback","getPrototypeOf","levelVal","wrap","LOG","ts","args","arguments","length","i","call","apply","transmitLevel","transmitValue","methodValue","methodLevel","val","argsCloned","slice","msg","o","time","lvl","shift","undefined","messages","arg","label","value","type","constructor","name","message","stack","a","Date","now","Math","round","toISOString","defd","globalThis","configurable","e","self","window"],"sources":["/home/chaden/Téléchargements/ttour-main/client/node_modules/pino/browser.js"],"sourcesContent":["'use strict'\n\nconst format = require('quick-format-unescaped')\n\nmodule.exports = pino\n\nconst _console = pfGlobalThisOrFallback().console || {}\nconst stdSerializers = {\n  mapHttpRequest: mock,\n  mapHttpResponse: mock,\n  wrapRequestSerializer: passthrough,\n  wrapResponseSerializer: passthrough,\n  wrapErrorSerializer: passthrough,\n  req: mock,\n  res: mock,\n  err: asErrValue,\n  errWithCause: asErrValue\n}\n\nfunction shouldSerialize (serialize, serializers) {\n  if (Array.isArray(serialize)) {\n    const hasToFilter = serialize.filter(function (k) {\n      return k !== '!stdSerializers.err'\n    })\n    return hasToFilter\n  } else if (serialize === true) {\n    return Object.keys(serializers)\n  }\n\n  return false\n}\n\nfunction pino (opts) {\n  opts = opts || {}\n  opts.browser = opts.browser || {}\n\n  const transmit = opts.browser.transmit\n  if (transmit && typeof transmit.send !== 'function') { throw Error('pino: transmit option must have a send function') }\n\n  const proto = opts.browser.write || _console\n  if (opts.browser.write) opts.browser.asObject = true\n  const serializers = opts.serializers || {}\n  const serialize = shouldSerialize(opts.browser.serialize, serializers)\n  let stdErrSerialize = opts.browser.serialize\n\n  if (\n    Array.isArray(opts.browser.serialize) &&\n    opts.browser.serialize.indexOf('!stdSerializers.err') > -1\n  ) stdErrSerialize = false\n\n  const customLevels = Object.keys(opts.customLevels || {})\n  const levels = ['error', 'fatal', 'warn', 'info', 'debug', 'trace'].concat(customLevels)\n\n  if (typeof proto === 'function') {\n    levels.forEach(function (level) {\n      proto[level] = proto\n    })\n  }\n  if (opts.enabled === false || opts.browser.disabled) opts.level = 'silent'\n  const level = opts.level || 'info'\n  const logger = Object.create(proto)\n  if (!logger.log) logger.log = noop\n\n  Object.defineProperty(logger, 'levelVal', {\n    get: getLevelVal\n  })\n  Object.defineProperty(logger, 'level', {\n    get: getLevel,\n    set: setLevel\n  })\n\n  const setOpts = {\n    transmit,\n    serialize,\n    asObject: opts.browser.asObject,\n    levels,\n    timestamp: getTimeFunction(opts)\n  }\n  logger.levels = getLevels(opts)\n  logger.level = level\n\n  logger.setMaxListeners = logger.getMaxListeners =\n  logger.emit = logger.addListener = logger.on =\n  logger.prependListener = logger.once =\n  logger.prependOnceListener = logger.removeListener =\n  logger.removeAllListeners = logger.listeners =\n  logger.listenerCount = logger.eventNames =\n  logger.write = logger.flush = noop\n  logger.serializers = serializers\n  logger._serialize = serialize\n  logger._stdErrSerialize = stdErrSerialize\n  logger.child = child\n\n  if (transmit) logger._logEvent = createLogEventShape()\n\n  function getLevelVal () {\n    return this.level === 'silent'\n      ? Infinity\n      : this.levels.values[this.level]\n  }\n\n  function getLevel () {\n    return this._level\n  }\n  function setLevel (level) {\n    if (level !== 'silent' && !this.levels.values[level]) {\n      throw Error('unknown level ' + level)\n    }\n    this._level = level\n\n    set(setOpts, logger, 'error', 'log') // <-- must stay first\n    set(setOpts, logger, 'fatal', 'error')\n    set(setOpts, logger, 'warn', 'error')\n    set(setOpts, logger, 'info', 'log')\n    set(setOpts, logger, 'debug', 'log')\n    set(setOpts, logger, 'trace', 'log')\n\n    customLevels.forEach(function (level) {\n      set(setOpts, logger, level, 'log')\n    })\n  }\n\n  function child (bindings, childOptions) {\n    if (!bindings) {\n      throw new Error('missing bindings for child Pino')\n    }\n    childOptions = childOptions || {}\n    if (serialize && bindings.serializers) {\n      childOptions.serializers = bindings.serializers\n    }\n    const childOptionsSerializers = childOptions.serializers\n    if (serialize && childOptionsSerializers) {\n      var childSerializers = Object.assign({}, serializers, childOptionsSerializers)\n      var childSerialize = opts.browser.serialize === true\n        ? Object.keys(childSerializers)\n        : serialize\n      delete bindings.serializers\n      applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize)\n    }\n    function Child (parent) {\n      this._childLevel = (parent._childLevel | 0) + 1\n      this.error = bind(parent, bindings, 'error')\n      this.fatal = bind(parent, bindings, 'fatal')\n      this.warn = bind(parent, bindings, 'warn')\n      this.info = bind(parent, bindings, 'info')\n      this.debug = bind(parent, bindings, 'debug')\n      this.trace = bind(parent, bindings, 'trace')\n      if (childSerializers) {\n        this.serializers = childSerializers\n        this._serialize = childSerialize\n      }\n      if (transmit) {\n        this._logEvent = createLogEventShape(\n          [].concat(parent._logEvent.bindings, bindings)\n        )\n      }\n    }\n    Child.prototype = this\n    return new Child(this)\n  }\n  return logger\n}\n\nfunction getLevels (opts) {\n  const customLevels = opts.customLevels || {}\n\n  const values = Object.assign({}, pino.levels.values, customLevels)\n  const labels = Object.assign({}, pino.levels.labels, invertObject(customLevels))\n\n  return {\n    values,\n    labels\n  }\n}\n\nfunction invertObject (obj) {\n  const inverted = {}\n  Object.keys(obj).forEach(function (key) {\n    inverted[obj[key]] = key\n  })\n  return inverted\n}\n\npino.levels = {\n  values: {\n    fatal: 60,\n    error: 50,\n    warn: 40,\n    info: 30,\n    debug: 20,\n    trace: 10\n  },\n  labels: {\n    10: 'trace',\n    20: 'debug',\n    30: 'info',\n    40: 'warn',\n    50: 'error',\n    60: 'fatal'\n  }\n}\n\npino.stdSerializers = stdSerializers\npino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime })\n\nfunction set (opts, logger, level, fallback) {\n  const proto = Object.getPrototypeOf(logger)\n  logger[level] = logger.levelVal > logger.levels.values[level]\n    ? noop\n    : (proto[level] ? proto[level] : (_console[level] || _console[fallback] || noop))\n\n  wrap(opts, logger, level)\n}\n\nfunction wrap (opts, logger, level) {\n  if (!opts.transmit && logger[level] === noop) return\n\n  logger[level] = (function (write) {\n    return function LOG () {\n      const ts = opts.timestamp()\n      const args = new Array(arguments.length)\n      const proto = (Object.getPrototypeOf && Object.getPrototypeOf(this) === _console) ? _console : this\n      for (var i = 0; i < args.length; i++) args[i] = arguments[i]\n\n      if (opts.serialize && !opts.asObject) {\n        applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize)\n      }\n      if (opts.asObject) write.call(proto, asObject(this, level, args, ts))\n      else write.apply(proto, args)\n\n      if (opts.transmit) {\n        const transmitLevel = opts.transmit.level || logger.level\n        const transmitValue = logger.levels.values[transmitLevel]\n        const methodValue = logger.levels.values[level]\n        if (methodValue < transmitValue) return\n        transmit(this, {\n          ts,\n          methodLevel: level,\n          methodValue,\n          transmitLevel,\n          transmitValue: logger.levels.values[opts.transmit.level || logger.level],\n          send: opts.transmit.send,\n          val: logger.levelVal\n        }, args)\n      }\n    }\n  })(logger[level])\n}\n\nfunction asObject (logger, level, args, ts) {\n  if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize)\n  const argsCloned = args.slice()\n  let msg = argsCloned[0]\n  const o = {}\n  if (ts) {\n    o.time = ts\n  }\n  o.level = logger.levels.values[level]\n  let lvl = (logger._childLevel | 0) + 1\n  if (lvl < 1) lvl = 1\n  // deliberate, catching objects, arrays\n  if (msg !== null && typeof msg === 'object') {\n    while (lvl-- && typeof argsCloned[0] === 'object') {\n      Object.assign(o, argsCloned.shift())\n    }\n    msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : undefined\n  } else if (typeof msg === 'string') msg = format(argsCloned.shift(), argsCloned)\n  if (msg !== undefined) o.msg = msg\n  return o\n}\n\nfunction applySerializers (args, serialize, serializers, stdErrSerialize) {\n  for (const i in args) {\n    if (stdErrSerialize && args[i] instanceof Error) {\n      args[i] = pino.stdSerializers.err(args[i])\n    } else if (typeof args[i] === 'object' && !Array.isArray(args[i])) {\n      for (const k in args[i]) {\n        if (serialize && serialize.indexOf(k) > -1 && k in serializers) {\n          args[i][k] = serializers[k](args[i][k])\n        }\n      }\n    }\n  }\n}\n\nfunction bind (parent, bindings, level) {\n  return function () {\n    const args = new Array(1 + arguments.length)\n    args[0] = bindings\n    for (var i = 1; i < args.length; i++) {\n      args[i] = arguments[i - 1]\n    }\n    return parent[level].apply(this, args)\n  }\n}\n\nfunction transmit (logger, opts, args) {\n  const send = opts.send\n  const ts = opts.ts\n  const methodLevel = opts.methodLevel\n  const methodValue = opts.methodValue\n  const val = opts.val\n  const bindings = logger._logEvent.bindings\n\n  applySerializers(\n    args,\n    logger._serialize || Object.keys(logger.serializers),\n    logger.serializers,\n    logger._stdErrSerialize === undefined ? true : logger._stdErrSerialize\n  )\n  logger._logEvent.ts = ts\n  logger._logEvent.messages = args.filter(function (arg) {\n    // bindings can only be objects, so reference equality check via indexOf is fine\n    return bindings.indexOf(arg) === -1\n  })\n\n  logger._logEvent.level.label = methodLevel\n  logger._logEvent.level.value = methodValue\n\n  send(methodLevel, logger._logEvent, val)\n\n  logger._logEvent = createLogEventShape(bindings)\n}\n\nfunction createLogEventShape (bindings) {\n  return {\n    ts: 0,\n    messages: [],\n    bindings: bindings || [],\n    level: { label: '', value: 0 }\n  }\n}\n\nfunction asErrValue (err) {\n  const obj = {\n    type: err.constructor.name,\n    msg: err.message,\n    stack: err.stack\n  }\n  for (const key in err) {\n    if (obj[key] === undefined) {\n      obj[key] = err[key]\n    }\n  }\n  return obj\n}\n\nfunction getTimeFunction (opts) {\n  if (typeof opts.timestamp === 'function') {\n    return opts.timestamp\n  }\n  if (opts.timestamp === false) {\n    return nullTime\n  }\n  return epochTime\n}\n\nfunction mock () { return {} }\nfunction passthrough (a) { return a }\nfunction noop () {}\n\nfunction nullTime () { return false }\nfunction epochTime () { return Date.now() }\nfunction unixTime () { return Math.round(Date.now() / 1000.0) }\nfunction isoTime () { return new Date(Date.now()).toISOString() } // using Date.now() for testability\n\n/* eslint-disable */\n/* istanbul ignore next */\nfunction pfGlobalThisOrFallback () {\n  function defd (o) { return typeof o !== 'undefined' && o }\n  try {\n    if (typeof globalThis !== 'undefined') return globalThis\n    Object.defineProperty(Object.prototype, 'globalThis', {\n      get: function () {\n        delete Object.prototype.globalThis\n        return (this.globalThis = this)\n      },\n      configurable: true\n    })\n    return globalThis\n  } catch (e) {\n    return defd(self) || defd(window) || defd(this) || {}\n  }\n}\n/* eslint-enable */\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}