{"ast":null,"code":"import { passwordAction } from '../slices/paswordSlice';\nimport request from '../../utils/request';\nimport { toast } from \"react-toastify\";\n\n// forgot password \nexport function forgotpassword(email) {\n  return async () => {\n    try {\n      const data = await request.post(\"/api/admin/password/reset-password-link\", {\n        email\n      });\n      toast.success(\"Password reset link sent to your email, please check your email\");\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n\n// get resset password \nexport function getRessetpassword(adminId, token) {\n  return async dispatch => {\n    try {\n      await request.get(`/api/admin/password/reset-password-link/${adminId}/${token}`);\n    } catch (error) {\n      dispatch(passwordAction.setError());\n    }\n  };\n}\n\n//resset  the password \nexport function Ressetpassword(newPassword, admin) {\n  return async () => {\n    try {\n      const {\n        data\n      } = await request.post(`/api/admin/password/reset-password-link/${admin.adminId}/${admin.token}`, {\n        password: newPassword\n      });\n      toast.success(data.message);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n}\n_c = Ressetpassword;\nvar _c;\n$RefreshReg$(_c, \"Ressetpassword\");","map":{"version":3,"names":["passwordAction","request","toast","forgotpassword","email","data","post","success","error","response","message","getRessetpassword","adminId","token","dispatch","get","setError","Ressetpassword","newPassword","admin","password","_c","$RefreshReg$"],"sources":["/home/chaden/Téléchargements/ttour-main/client/src/redux/apiCalls/passwordApiCall.js"],"sourcesContent":["import { passwordAction } from '../slices/paswordSlice'\nimport request  from '../../utils/request'\nimport { toast } from \"react-toastify\"\n\n\n// forgot password \nexport function forgotpassword(email){\n    return async()=>{\n        try{\n    const data=await request.post(\"/api/admin/password/reset-password-link\" ,{email})\n    toast.success(\"Password reset link sent to your email, please check your email\")\n        }\n        catch(error){\n           toast.error(error.response.data.message)\n          \n        }\n\n    }\n}\n\n\n// get resset password \nexport function getRessetpassword(adminId,token){\n    return async(dispatch)=>{\n        try{\n        await request.get(`/api/admin/password/reset-password-link/${adminId}/${token}`)\n        }\n        catch(error){\n          dispatch(passwordAction.setError());\n        }\n    }\n}\n\n\n//resset  the password \nexport function Ressetpassword(newPassword ,admin){\n    return async()=>{\n        try{\n   const {data}=  await request.post(`/api/admin/password/reset-password-link/${admin.adminId}/${admin.token}`,{\n        password:newPassword\n     })\n\n        toast.success(data.message)\n        }catch(error){\n            toast.error(error.response.data.message)\n          \n        }\n    }\n}"],"mappings":"AAAA,SAASA,cAAc,QAAQ,wBAAwB;AACvD,OAAOC,OAAO,MAAO,qBAAqB;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;;AAGtC;AACA,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAC;EACjC,OAAO,YAAS;IACZ,IAAG;MACP,MAAMC,IAAI,GAAC,MAAMJ,OAAO,CAACK,IAAI,CAAC,yCAAyC,EAAE;QAACF;MAAK,CAAC,CAAC;MACjFF,KAAK,CAACK,OAAO,CAAC,iEAAiE,CAAC;IAC5E,CAAC,CACD,OAAMC,KAAK,EAAC;MACTN,KAAK,CAACM,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;IAE3C;EAEJ,CAAC;AACL;;AAGA;AACA,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAACC,KAAK,EAAC;EAC5C,OAAO,MAAMC,QAAQ,IAAG;IACpB,IAAG;MACH,MAAMb,OAAO,CAACc,GAAG,CAAE,2CAA0CH,OAAQ,IAAGC,KAAM,EAAC,CAAC;IAChF,CAAC,CACD,OAAML,KAAK,EAAC;MACVM,QAAQ,CAACd,cAAc,CAACgB,QAAQ,CAAC,CAAC,CAAC;IACrC;EACJ,CAAC;AACL;;AAGA;AACA,OAAO,SAASC,cAAcA,CAACC,WAAW,EAAEC,KAAK,EAAC;EAC9C,OAAO,YAAS;IACZ,IAAG;MACR,MAAM;QAACd;MAAI,CAAC,GAAG,MAAMJ,OAAO,CAACK,IAAI,CAAE,2CAA0Ca,KAAK,CAACP,OAAQ,IAAGO,KAAK,CAACN,KAAM,EAAC,EAAC;QACvGO,QAAQ,EAACF;MACZ,CAAC,CAAC;MAEChB,KAAK,CAACK,OAAO,CAACF,IAAI,CAACK,OAAO,CAAC;IAC3B,CAAC,QAAMF,KAAK,EAAC;MACTN,KAAK,CAACM,KAAK,CAACA,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,CAAC;IAE5C;EACJ,CAAC;AACL;AAACW,EAAA,GAbeJ,cAAc;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}